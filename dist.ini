name    = Renard-API-Tesseract
author  = Project Renard
license = Perl_5
copyright_holder = Project Renard
; copyright_year   = TODO
version = 0.001

[@Filter]
-bundle = @Author::ZMUGHAL::ProjectRenard
-remove = MakeMaker
-remove = PodCoverageTests
-remove = AutoPrereqs

[AutoPrereqs]
; skip InlineModule generated module
skip = ^Renard::API::Tesseract::Base::Inline

[Prereqs / Recommends]
; for 'with' functionality
Inline = 0.67
Inline::CPP = 0

[InlineModule]
module = Renard::API::Tesseract::Base
ilsm = Inline::CPP

; authordep ExtUtils::Typemaps::Default

[Run::AfterBuild]
eval = use ExtUtils::Typemaps::ObjectMap;
eval = my $private_map = ExtUtils::Typemaps->new(file => '%d/lib/Renard/API/Tesseract/tesseract.map');
eval = $private_map->merge(typemap => ExtUtils::Typemaps::ObjectMap->new);
eval = $private_map->write(file => '%d/lib/Renard/API/Tesseract/typemap');
